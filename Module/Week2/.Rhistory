?runif
runif(20,0.1)
?sample
sample(1:6,1)
n=10
hist(sample(1:6,n,replace=T))
sample(state.name,10)
sample(LETTERS,30,replace=T)
sample(LETTERS,30)
sample(LETTERS,30,replace=T)
coins=c(0,1)
coins
names(coins)=c("H","T")
n=10000
trial = smaple(coins,n,replace=True)
trial = sample(coins,n,replace=True)
trial = sample(coins,n,replace=T)
trial
length(trial[trial==0])/n
length(trial[trial==1])/n
length(trial[])
hist(sample(1:100,n,replace=T))
hist(sample(1:6,100,replace=T))
length(trial[names(trial)=="T"])/n
length(trial[names(trial)=="H"])/n
table(trial)
sample(LETTERS,30,replace=T)
sample(LETTERS,30)
sample(LETTERS,10)
die=c(1:6)
n=4
chevalier=function(x,n){}
chevalier=function(x,n){
a=sample(x,n,replace=T)
return(a)
}
res = chevalier(die,n)
res
m=10
a=character(m)
mul=list()
res=vector()
for(i in 1:m){
l = chevalier(die,n)
}
for(i in 1:m){
l = chevalier(die,n)
mul[[i]]=l
if (6 %in% res){}
}
for(i in 1:m){
res = chevalier(die,n)
mul[[i]]=res
if (6 %in% res){
a[i]="TRUE"
}
else{
a[i]="FALSE"
}
}
mul
a
table(a)
table(a)["TRUE"]/m
table(a)["TRUE"]
m=1000
for(i in 1:m){
res = chevalier(die,n)
mul[[i]]=res
if (6 %in% res){
a[i]="TRUE"
}
else{
a[i]="FALSE"
}
}
mul
table(a)["TRUE"]/m
?apply(array, margin, ...)
die_list=replicate(m,chevalier(die,n))
die_list
true_vector = apply(die_list,2,funtion(r) any (r %in% 6))
true_vector = apply(die_list,2,function(r) any (r %in% 6))
true_vector
library(VennDiagram)
install.packages("VennDiagram")
library(VennDiagram)
library(grid)
library(VennDiagram)
setwd("/Users/siruliu/iCloudDrive/Desktop/utah/6106/Module/Week2")
gene=read.csv(file='Workbook1.csv',header=TRUE,sep=",",stringAsFactors=F)
gene=read.csv(file='Workbook1.csv',header=TRUE,sep=",")
view(gene)
View(gene)
geneLS<-lapply(as.list(gene),function(x) x[x!=""])
setdiff(geneLS$ConditionA,geneLS$ConditionB)
names(geneLS)
venn.plot<-venn.diagram(VENN.LIST,NULL,fill=c("darkmagenta","darkblue","darkgreen"),alpha=c(0.5,0.5,0.5),cex=2,catfontace=4,category.names=c("A","B","C"), main="Random Gene List")
VENN.LIST<-geneLS
venn.plot<-venn.diagram(VENN.LIST,NULL,fill=c("darkmagenta","darkblue","darkgreen"),alpha=c(0.5,0.5,0.5),cex=2,catfontace=4,category.names=c("A","B","C"), main="Random Gene List")
grid.draw(venn.plot)
dev.off()
intersect(gene$ConditionA,gene$ConditionB)
grid.draw(venn.plot)
Condc=gene$ConditionC
